/// Reorders activities between same or different days.
void reorderActivities(
  ActivityModel activity, Weekday dayFrom, Weekday dayTo, int newOrder) {
  final WeekModel week = _userWeek.value.week;
  final UsernameModel user = _userWeek.value.user;
  // Removed from dayFrom, the day the pictogram is dragged from
  int dayLength = week.days[dayFrom.index].activities.length;

  for (int i = activity.order + 1; i < dayLength; i++) {
    week.days[dayFrom.index].activities[i].order -= 1;
  }

  week.days[dayFrom.index].activities.remove(activity);
  activity.order = dayFrom == dayTo &&
      week.days[dayTo.index].activities.length == newOrder - 1
      ? newOrder - 1
      : newOrder;
  // Inserts into dayTo, the day that the pictogram is inserted to
  dayLength = week.days[dayTo.index].activities.length;

  for (int i = activity.order; i < dayLength; i++) {
    week.days[dayTo.index].activities[i].order += 1;
  }

  week.days[dayTo.index].activities.insert(activity.order, activity);

  _api.week.update(user.id, week.weekYear, week.weekNumber, week).listen((WeekModel newWeek) {
    _userWeek.add(UserWeekModel(week, user));
  });
}